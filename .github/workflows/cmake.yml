name: CMake

on:
  push:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Get executable (non-Windows)
      if: runner.os != 'Windows'
      run: |
        mkdir release
        cp build/decklink_ndi release/decklink_ndi_${{runner.os}}

    - name: Get executable (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir release
        cp build/Release/decklink_ndi.exe release/decklink_ndi_${{runner.os}}.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: release_${{ runner.os }}
        path: ${{github.workspace}}/release/*

    - name: GH Release
      if: startsWith(github.ref, 'refs/tags')
      uses: softprops/action-gh-release@v0.1.13
      with:
        # Newline-delimited list of path globs for asset files to upload
        files: ${{github.workspace}}/release/*
        
